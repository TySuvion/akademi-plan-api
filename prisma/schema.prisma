// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id Int @default(autoincrement()) @id
  name String
  user User @relation("UserCourses",fields: [userID], references: [id])
  userID Int
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  events Event[] @relation("CourseEvents")
  weeklyGoals WeeklyGoal[] @relation("WeeklyCourseGoal")
}

model WeeklyGoal {
  id Int @default(autoincrement()) @id
  courseId Int
  course Course @relation("WeeklyCourseGoal",fields: [courseId], references: [id], onDelete: Cascade)
  weekStart DateTime
  weekEnd DateTime
  @@unique([courseId, weekStart, weekEnd])
  goalSessions Int @default(16)
  completedSessions Int @default(0)
}

model User {
  id Int @default(autoincrement()) @id
  username String @unique
  password String? 
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  courses Course[] @relation("UserCourses")
  events Event[] @relation("UserEvents")
}

enum EventType {
  CALENDAR_EVENT
  STUDY_BLOCK
}

model Event {
  id Int @default(autoincrement()) @id
  userId Int
  user User @relation("UserEvents",fields: [userId], references: [id])
  name String
  description String?
  start DateTime
  end DateTime
  course Course? @relation("CourseEvents",fields: [courseId], references: [id])
  courseId Int?
  type EventType @default(CALENDAR_EVENT)
  studyBlock StudyBlock? @relation("StudyBlockEvent")
}

model StudyBlock {
  id Int @default(autoincrement()) @id
  event Event @relation("StudyBlockEvent" , fields: [eventId], references: [id], onDelete: Cascade)
  eventId Int @unique
  plannedSessions Int
  completedSessions Int @default(0) 
}